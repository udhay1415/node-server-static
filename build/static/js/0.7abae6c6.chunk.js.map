{"version":3,"sources":["../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/lodash/set.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js","../node_modules/semantic-ui-react/dist/es/elements/Input/Input.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","../node_modules/semantic-ui-react/dist/es/elements/Button/Button.js"],"names":["arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","exports","arr","baseSet","object","path","value","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","Object","from","TypeError","Checkbox","_Component","_getPrototypeOf2","_this","this","_len","arguments","length","args","_key","call","apply","concat","_this$props","props","disabled","radio","readOnly","checked","state","_this$props2","tabIndex","e","id","_this$state","indeterminate","isInputClick","inputRef","current","target","isLabelClick","labelRef","isRootClick","hasId","isClickFromMouse","handleChange","stopPropagation","canToggle","trySetState","_this$state2","defaultPrevented","preventDefault","_this$state3","key","setIndeterminate","_this$props3","className","label","name","slider","toggle","type","_this$state4","classes","unhandled","ElementType","_partitionHTMLProps","htmlProps","_partitionHTMLProps2","htmlInputProps","rest","labelElement","defaultProps","htmlFor","autoGenerateKey","createElement","onClick","handleClick","onChange","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","innerRef","computeTabIndex","propTypes","Input","loading","icon","focus","select","child","ref","c","_this2","_this$props4","action","actionPosition","children","error","fluid","iconPosition","input","inverted","labelPosition","size","transparent","_this$partitionProps","partitionProps","_this$partitionProps2","isNil","childElements","toArray","handleChildOverrides","actionElement","create","computeIcon","ButtonContent","content","hidden","visible","getUnhandledProps","getElementType","handledProps","ButtonGroup","attached","basic","buttons","color","compact","floated","labeled","negative","positive","primary","secondary","vertical","widths","button","ButtonOr","text","Button","role","active","animated","circular","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","buttonClasses","containerClasses","Label","pointing","Ref","undefined","Icon","hasChildren","computeButtonAriaRole","as"],"mappings":"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","file":"static/js/0.7abae6c6.chunk.js","sourcesContent":["var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var baseSet = require('./_baseSet');\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\n\n\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _set from \"lodash/set\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"labelRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseUp\", function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state4 = this.state,\n          checked = _this$state4.checked,\n          indeterminate = _this$state4.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1]; // Heads Up!\n      // Do not remove empty labels, they are required by SUI CSS\n\n\n      var labelElement = createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick,\n        onChange: this.handleChange,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp\n      }), React.createElement(Ref, {\n        innerRef: this.inputRef\n      }, React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        readOnly: true,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      }))), React.createElement(Ref, {\n        innerRef: this.labelRef\n      }, labelElement));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _includes from \"lodash/includes\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport { handleRef } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeIcon\", function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _this.inputRef.current.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"select\", function () {\n      return _this.inputRef.current.select();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChildOverrides\", function (child, defaultProps) {\n      return _objectSpread({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"partitionProps\", function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_objectSpread({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          actionPosition = _this$props4.actionPosition,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          disabled = _this$props4.disabled,\n          error = _this$props4.error,\n          fluid = _this$props4.fluid,\n          focus = _this$props4.focus,\n          icon = _this$props4.icon,\n          iconPosition = _this$props4.iconPosition,\n          input = _this$props4.input,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          size = _this$props4.size,\n          transparent = _this$props4.transparent,\n          type = _this$props4.type;\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _this$partitionProps = this.partitionProps(),\n          _this$partitionProps2 = _slicedToArray(_this$partitionProps, 2),\n          htmlInputProps = _this$partitionProps2[0],\n          rest = _this$partitionProps2[1]; // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), childElements);\n      } // Render Shorthand\n      // ----------------------------------------\n\n\n      var actionElement = Button.create(action, {\n        autoGenerateKey: false\n      });\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label', // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        },\n        autoGenerateKey: false\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n        defaultProps: htmlInputProps,\n        autoGenerateKey: false\n      }), Icon.create(this.computeIcon(), {\n        autoGenerateKey: false\n      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\n_defineProperty(Input, \"defaultProps\", {\n  type: 'text'\n});\n\n_defineProperty(Input, \"handledProps\", [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"]);\n\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;"],"sourceRoot":""}