{"version":3,"sources":["page/VueFind/VueFind.jsx","page/VueFind/index.js"],"names":["VueFind","props","match","history","useState","ontology","updateOntology","brand","updateBrand","color","updateColor","size","updateSize","material","updateMaterial","pageNum","updatePageNum","type","field","order","sortFilter","updateSortFilter","currPage","params","category","saleProduct","updateSaleProduct","APIData","URL","document","location","searchParams","search","get","initSearch","trim","length","searchQuery","updateQuery","page","parseInt","updatePage","filter","updatedState","isMenuHeader","filterOntology","filterBrand","filterColor","filterSize","filterMaterial","query","num","filterValue","toLowerCase","updatedPageLink","redirectionLink","window","pathname","seperation","join","encodeURIComponent","UpdateCurrentPage","push","updated","useEffect","filterArr","split","map","filters","indexOf","ontologyArr","replace","colorArr","brandArr","sizeArr","materialArr","context","vue_find","API_KEY","url","children","mad_UUID","getCookie","user_id","localStorage","getItem","default_url","client_name","config","category_list","clp_url","endPoint","categoryList","postBody","api_key","widget_list","mad_uuid","facet_limit","facets","fields","details","order_by","hits_per_page","facet_filters","page_num","is_from_demo_site","text_search","text_url","search_query","num_results","getAPIData","updatePageFilters"],"mappings":"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","file":"static/js/16.178de78c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RenderDropDown, RenderMainSection, RenderSearch } from \"./renderProps\";\nimport { VueFindWrapper, TitleEl, CategoryWrapper } from \"./styled\";\nimport { ConfigConsumer } from \"../../container\";\nimport { getCookie } from \"../../common\";\nimport \"semantic-ui-css/semantic.min.css\";\n// const styleLink = document.createElement(\"link\")\n// styleLink.rel = \"stylesheet\"\n// styleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\"\n\nconst UpdateCurrentPage = (ontology, brand, color, size, material) => {\n  let redirectionLink = `${window.location.pathname}?filters=`;\n  let seperation = \"\";\n  let filterValue = \"\";\n\n  if (ontology.length) {\n    seperation = \";\";\n    filterValue += `ontology=${ontology.join()}`;\n  }\n  if (brand.length) {\n    filterValue += seperation;\n    filterValue += `brand=${brand.join()}`;\n    seperation = \";\";\n  }\n  if (color.length) {\n    filterValue += seperation;\n    filterValue += `color=${color.join()}`;\n    seperation = \";\";\n  }\n  if (size.length) {\n    filterValue += seperation;\n    filterValue += `size=${size.join()}`;\n  }\n  if (material.length) {\n    filterValue += seperation;\n    filterValue += `material=${material.join()}`;\n  }\n  return redirectionLink + encodeURIComponent(filterValue);\n};\n\nconst VueFind = (props) => {\n  const { match, history } = props;\n\n  const [ontology, updateOntology] = useState([]);\n  const [brand, updateBrand] = useState([]);\n  const [color, updateColor] = useState([]);\n  const [size, updateSize] = useState([]);\n  const [material, updateMaterial] = useState([]);\n\n  const [pageNum, updatePageNum] = useState(1);\n  const [sortFilter, updateSortFilter] = useState({\n    type: \"custom\",\n    field: \"trending\",\n    order: \"desc\",\n  });\n  const currPage =\n    match && match.params && match.params.category ? match.params.category : \"\";\n  const [saleProduct, updateSaleProduct] = useState(\"\");\n  let APIData = {};\n  let params = new URL(document.location).searchParams;\n  let search = params.get(\"q\");\n  let initSearch = \"\";\n  if (currPage && currPage === \"search\" && search && search.trim().length) {\n    initSearch = search;\n  } else {\n    initSearch = \"\";\n  }\n  const [searchQuery, updateQuery] = useState(initSearch);\n  if (searchQuery !== initSearch) {\n    updateQuery(initSearch);\n  }\n  let page = params.get(\"page_num\");\n  if (page) {\n    if (parseInt(page) !== pageNum) {\n      updatePageNum(parseInt(page));\n    }\n  } else if (pageNum !== 1) {\n    updatePageNum(parseInt(1));\n  }\n  let filter = params.get(\"filters\");\n  if (!filter) {\n    if (ontology.length) {\n      updateOntology([]);\n    }\n    if (color.length) {\n      updateColor([]);\n    }\n    if (brand.length) {\n      updateBrand([]);\n    }\n    if (size.length) {\n      updateSize([]);\n    }\n    if (material.length) {\n      updateMaterial([]);\n    }\n  }\n\n  const getAPIData = (config) => {\n    const { children, mad_UUID, user_id, default_url } = config;\n    let API_KEY = config.API_KEY;\n    switch (currPage) {\n      case \"category\":\n        const category_list =\n          children && children.category_list ? children.category_list : {};\n        if (category_list.API_KEY) {\n          API_KEY = category_list.API_KEY;\n        }\n        let clp_url = default_url + \"/v2/widgets\";\n        if (category_list.endPoint && category_list.categoryList) {\n          clp_url =\n            (category_list.endPoint || \"\") + (category_list.categoryList || \"\");\n        }\n        return {\n          url: clp_url,\n          postBody: {\n            api_key: API_KEY,\n            widget_list: [25],\n            mad_uuid: mad_UUID,\n            user_id: user_id,\n            facet_limit: 30,\n            facets: [\n              \"category\",\n              \"brand\",\n              \"color\",\n              \"sub_cat\",\n              \"size\",\n              \"price\",\n              \"material\",\n            ],\n            fields: [\n              \"brand\",\n              \"title\",\n              \"image_link\",\n              \"internal_image_url\",\n              \"color\",\n              \"price\",\n              \"size\",\n              \"material\",\n            ],\n            details: true,\n            order_by: sortFilter,\n            hits_per_page: 50,\n            facet_filters: {},\n            page_num: pageNum,\n            is_from_demo_site: true,\n          },\n        };\n      case \"search\":\n        const text_search =\n          children && children.text_search ? children.text_search : {};\n        if (text_search.API_KEY) {\n          API_KEY = text_search.API_KEY;\n        }\n        let text_url = default_url + \"/widgets\";\n        if (text_search.endPoint && text_search.categoryList) {\n          text_url =\n            (text_search.endPoint || \"\") + (text_search.categoryList || \"\");\n        }\n        return {\n          url: text_url,\n          postBody: {\n            api_key: API_KEY,\n            mad_uuid: mad_UUID,\n            user_id: user_id,\n            facet_limit: 30,\n            facets: [\"category\", \"size\", \"brand\", \"color\"],\n            widget_list: [42],\n            details: true,\n            search_query: searchQuery,\n            fields: [\n              \"title\",\n              \"brand\",\n              \"category\",\n              \"small_image_link\",\n              \"image_link\",\n              \"internal_image_url\",\n            ],\n            order_by: sortFilter,\n            num_results: [20],\n            page_num: pageNum,\n            hits_per_page: 50,\n            is_from_demo_site: true,\n          },\n        };\n      default:\n        return {};\n    }\n  };\n\n  const updatePage = (filter, updatedState, isMenuHeader) => {\n    let filterOntology = ontology,\n      filterBrand = brand,\n      filterColor = color,\n      filterSize = size,\n      filterMaterial = material,\n      query = searchQuery,\n      num = pageNum;\n\n    if (filter) {\n      let filterValue = filter.toLowerCase();\n      if (filterValue === \"ontology\" || filterValue === \"category\") {\n        filterOntology = updatedState;\n        if (isMenuHeader) {\n          filterBrand = [];\n          filterColor = [];\n          filterSize = [];\n          filterMaterial = [];\n        }\n      } else if (filterValue === \"brand\") {\n        filterBrand = updatedState;\n      } else if (filterValue === \"color\") {\n        filterColor = updatedState;\n      } else if (filterValue === \"size\") {\n        filterSize = updatedState;\n      } else if (filterValue === \"material\") {\n        filterMaterial = updatedState;\n      } else if (filterValue === \"page\") {\n        num = updatedState;\n      } else if (filterValue === \"search\") {\n        query = updatedState;\n      }\n    }\n    let updatedPageLink = UpdateCurrentPage(\n      filterOntology,\n      filterBrand,\n      filterColor,\n      filterSize,\n      filterMaterial\n    );\n    if (query !== initSearch) {\n      initSearch = query;\n      num = 1;\n    }\n    if (num > 1) {\n      updatedPageLink += `&page_num=${num}`;\n    }\n    if (query && query.trim().length) {\n      updatedPageLink += `&q=${query}`;\n    }\n    history.push(updatedPageLink, { updated: true });\n  };\n\n  useEffect(() => {\n    // document.head.appendChild(styleLink);\n    let params = new URL(document.location).searchParams;\n    let filter = params.get(\"filters\");\n    let search = params.get(\"q\");\n    let page = params.get(\"page_num\");\n    if (parseInt(page) > 1) {\n      updatePageNum(parseInt(page));\n    }\n    if (currPage !== \"search\") {\n      updateQuery(\"\");\n    } else if (search && search.trim().length) {\n      updateQuery(search);\n    }\n    if (filter) {\n      let filterArr = filter.split(\";\");\n      if (filterArr.length) {\n        filterArr.map((filters) => {\n          if (filters) {\n            if (filters.indexOf(\"ontology\") >= 0) {\n              let ontology = filters.replace(\"ontology=\", \"\");\n              const ontologyArr = ontology.split(\",\");\n              updateOntology(ontologyArr);\n            }\n            if (filters.indexOf(\"color\") >= 0) {\n              let color = filters.replace(\"color=\", \"\");\n              const colorArr = color.split(\",\");\n              updateColor(colorArr);\n            }\n            if (filters.indexOf(\"brand\") >= 0) {\n              let brand = filters.replace(\"brand=\", \"\");\n              const brandArr = brand.split(\",\");\n              updateBrand(brandArr);\n            }\n            if (filters.indexOf(\"size\") >= 0) {\n              let size = filters.replace(\"size=\", \"\");\n              const sizeArr = size.split(\",\");\n              updateSize(sizeArr);\n            }\n            if (filters.indexOf(\"material\") >= 0) {\n              let material = filters.replace(\"material=\", \"\");\n              const materialArr = material.split(\",\");\n              updateMaterial(materialArr);\n            }\n          }\n          return \"\";\n        });\n      } else {\n        updateOntology([]);\n        updateColor([]);\n        updateBrand([]);\n        updateMaterial([]);\n        updateSize([]);\n      }\n    } else {\n      updateOntology([]);\n      updateColor([]);\n      updateBrand([]);\n      updateMaterial([]);\n      updateSize([]);\n    }\n  }, []);\n\n  return (\n    <>\n      <VueFindWrapper>\n        {/* <TitleEl>Vue Find</TitleEl> */}\n        <CategoryWrapper>\n          {currPage === \"category\" ? null : null}\n        </CategoryWrapper>\n        <ConfigConsumer>\n          {(context) => {\n            const { vue_find, API_KEY, url } = context;\n            const children =\n              vue_find && vue_find.children ? vue_find.children : {};\n            const mad_UUID = getCookie(\"mad_UUID\");\n            let user_id = localStorage.getItem(\"userId\");\n            let default_url = url;\n            if (context.client_name == \"2253_yoox-poc\") {\n              default_url = \"https://eu-robin-poc.madstreetden.com\";\n            }\n            if (!user_id) {\n              user_id = context.user_id;\n            }\n            const config = {\n              children,\n              API_KEY,\n              user_id,\n              mad_UUID,\n              default_url,\n            };\n            APIData = getAPIData(config);\n            return (\n              <RenderMainSection\n                currPage={currPage}\n                pageNum={pageNum}\n                ontology={ontology}\n                brand={brand}\n                color={color}\n                size={size}\n                material={material}\n                saleProduct={saleProduct}\n                updateSaleProduct={updateSaleProduct}\n                search={searchQuery}\n                APIData={APIData}\n                updateOntology={updateOntology}\n                updateBrand={updateBrand}\n                updateColor={updateColor}\n                updateSize={updateSize}\n                updateMaterial={updateMaterial}\n                updateQuery={updateQuery}\n                updateSortFilter={updateSortFilter}\n                updatePageFilters={updatePage}\n              />\n            );\n          }}\n        </ConfigConsumer>\n      </VueFindWrapper>\n    </>\n  );\n};\n\nexport { VueFind };\n","export * from './VueFind'\nexport { VueFind as default } from './VueFind'"],"sourceRoot":""}