{"version":3,"sources":["static/svg/upload.svg","static/svg/vue-find.svg","page/ImageSearch/styled.jsx","page/ImageSearch/renderProps.jsx","page/ImageSearch/ImageSearch.jsx","page/ImageSearch/index.js"],"names":["module","exports","TitleWrapper","styled","div","VueLogoEl","img","ImageSearchWrapper","FormWrapper","form","UserInputWrapper","InputEl","SelectEl","ImageUploadIcon","UploadIcon","SearchResultWrapper","RecommendationWithTabsWrapper","DataItemImg","DataInfoBlock","DebugTagsWrapper","UploadedProductImage","UploadedImgWrapper","UploadInputref","createRef","uploadImage","file","image_search","API_KEY","default_url","upload_endpoint","formData","FormData","length","append","fetch","method","body","then","data","json","resp","status","toLowerCase","mad_id","console","log","catch","err","getTags","requiredProps","image_type","correlation_key","tag","DefaultValues","api_key","makeAPIRequests","updateimageSearchData","Promise","all","response","currResp","UploadedResp","madId","tagsResp","ConstructImageSrc","updateRespObj","UpdatedResp","imgSrc","reader","FileReader","onload","e","target","result","readAsDataURL","RenderImageSearchInput","props","currFile","useRef","useState","CurrInputValue","updateInputValue","context","vue_find","url","children","onSubmit","preventDefault","value","type","placeholder","onInput","currentTarget","accept","hidden","inputRef","onChange","current","files","onClick","click","list","currState","updatedState","gender","RenderSearchResults","src","internal_image_url","debug","alt","RecommendedSearchMap","map","item","key","tabsData","labelsArr","TabsData","label","labelArr","split","index","toString","constructTabs","labels","tabsContainer","activeIndex","recommendedData","sliderPerGroup","hidePrice","hideMSDOntology","force_debug","ImageSearch","imageSearchData","qp","window","location","search","replace","param","paramArr","isDebug","VueLogoImg","title"],"mappings":"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","file":"static/js/9.26857942.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upload.a7ed5990.svg\";","module.exports = __webpack_public_path__ + \"static/media/vue-find.c72e8893.svg\";","import styled from 'styled-components'\nimport { InputEl, SelectEl, RecommendationWithTabsWrapper, DataInfoBlock, DataItemImg } from '../../component'\nimport UploadIcon from '../../static/svg/upload.svg'\nimport { DebugTagsWrapper } from '../../component'\n\nconst TitleWrapper = styled.div`\n    height: 3.5em;\n    line-height: 3.5em;\n    border-bottom: 1px solid #E2E2E2;\n    position: fixed;\n    top: 50px;\n    min-width: 1240px;\n    width: 100%;\n    z-index: 1;\n    background-color: #fff;\n    text-align: center;\n`\n\nconst VueLogoEl= styled.img`\n    width: 10%;\n    margin-right: 1em;\n    vertical-align: middle;\n`\n\nconst ImageSearchWrapper = styled.div`\n    width: 85%;\n    margin: auto;\n    margin-top: 107px;\n`\n\nconst FormWrapper = styled.form`\n    display: flex;\n    width: 100%;\n`\n\nconst UserInputWrapper = styled.div`\n    display: flex;\n    width: 75%;\n    padding: 1em 0em;\n    margin: auto;\n    ${InputEl} {\n        padding: .75em .75em;\n        margin: 1px;\n        width: calc(100% - (1px * 2));\n        height: calc(100% - (1px * 2));\n        font-size: 14px;\n        color: #064559;\n        border: 0;\n        border-radius: .15em;\n        outline: none;\n        &[type='text'] {\n            width: 37.5%;\n            border: 1px solid #b9b9b9;\n            height: auto;\n        }\n        &[type='submit'] {\n            width: 12.5%;\n            background-color: #FF7054;\n            color: #fff;\n            margin-left: 4px;\n            cursor: pointer;\n        }\n    }\n    ${SelectEl} {\n        height: 2rem;\n        color: #a6a6a6;\n        margin-left: 1em;\n        margin-top: .4em;\n        text-transform: capitalize;\n        cursor: pointer;\n    }\n`\n\nconst ImageUploadIcon = styled.div`\n    mask-image: url(${UploadIcon});\n    mask-repeat: no-repeat;\n    mask-position: center;\n    background-color: lightslategray;\n    width: 6.25%;\n    margin: .6em 1em;\n    cursor: pointer;\n`\n\nconst SearchResultWrapper = styled.div`\n    display: flex;\n    ${RecommendationWithTabsWrapper} {\n        width: 68.75%;\n        margin: 10px;\n        height: auto;\n        .slick-next {\n            right: 11px;\n        }\n        .slick-prev {\n            left: 22px;\n            z-index: 1;\n        }\n\n        ${DataItemImg}{\n            height: 250px;\n        }\n        \n        ${DataInfoBlock} {\n            max-width: 80%;\n            max-height: 50%;\n        }\n    }\n    ${DebugTagsWrapper} {\n        padding: 15px;\n    }\n`\n\nconst UploadedProductImage = styled.img`\n    max-width: 100%;\n    max-height: 400px;\n`\n\nconst UploadedImgWrapper = styled.div`\n    padding: 10px;\n    width: 25%;\n    height: auto;\n    text-align: center;\n`\n\nexport {\n    TitleWrapper,\n    VueLogoEl,\n    ImageSearchWrapper,\n    UserInputWrapper,\n    ImageUploadIcon,\n    UploadedProductImage,\n    UploadedImgWrapper,\n    SearchResultWrapper,\n    FormWrapper\n}","import React, {\n    createRef,\n    useRef,\n    useState\n} from 'react'\nimport {\n    UserInputWrapper,\n    ImageUploadIcon,\n    UploadedProductImage,\n    SearchResultWrapper,\n    UploadedImgWrapper,\n    FormWrapper\n} from './styled'\nimport { Input, Select, ProductCarouselWithTabs } from '../../component'\nimport {\n    RecommendationSearchContainer,\n    RecommendationSearchConsumer,\n    ConfigConsumer\n} from '../../container'\n\nimport { DefaultValues } from '../../configs'\n\nconst UploadInputref = createRef()\n\nconst uploadImage = (file, image_search, API_KEY, default_url) => {\n    let upload_endpoint = image_search['upload_endpoint'] ? image_search['upload_endpoint'] : (default_url + \"/upload\")\n    let formData = new FormData()\n\n    if(upload_endpoint && file.length) {\n        if(typeof(file) === 'string') {\n            formData.append('image_url', file)\n        }\n        else {\n            formData.append('image', file[0])\n        }    \n        formData.append('api_key', API_KEY)\n\n        return fetch(\n            upload_endpoint,\n            {\n                method: 'POST',\n                body: formData\n            }\n        )\n        .then(data => data.json())\n        .then(resp => {\n            if(resp && resp.status && resp.status.toLowerCase() === 'success' && resp.data && resp.data.mad_id) {\n                return resp.data.mad_id\n            }\n            console.log('No Mad Id in response')\n            return ''\n        })\n        .catch(err => {\n            console.log(err)\n            return ''\n        })\n    }\n    return ''\n}\n\nconst getTags = (file, requiredProps) => {\n    const {\n        image_search,\n        image_type,\n        correlation_key,\n    } = requiredProps\n    let tag = DefaultValues['vue_tag_url']\n    let api_key = DefaultValues['vue_tag_api_key']\n    if(image_search['tag_endpoint']){\n        tag = image_search['tag_endpoint']\n    }\n    if(image_search['API_KEY']){\n        api_key = image_search['API_KEY']\n    }\n    \n    if(tag && file && file.length) {\n        let formData = new FormData()\n        formData.append('api_key', api_key)\n        formData.append('correlation_key', correlation_key)\n        formData.append('image_type', image_type)\n        if(typeof(file) === 'string') {\n            formData.append('image', file)\n            formData.append('image_url', file)\n        }\n        else {\n            formData.append('image', file[0])\n        }\n\n        return fetch(\n            tag,\n            {\n                method: 'POST',\n                body: formData\n            }\n        )\n        .then(data => data.json())\n        .then(resp => resp)\n        .catch(err => console.log(err))\n    }\n}\n\nconst incrementCounter = (image_search) => {\n    const { counter } = image_search\n    if(counter) {\n        fetch(\n            counter,\n            {\n                method: 'POST',\n                body: 'type=image_search'\n            }\n        )\n        .then(data => data.json())\n        .then(resp => {\n            if(resp && resp.status && resp.status.toLowerCase() !== 'success') {\n                console.log('Increment Counter Call failed')\n            }\n        })\n        .catch(err => console.log(err))\n    }\n}\n\nconst makeAPIRequests = (file, updateimageSearchData, requiredProps) => {\n    const {\n        image_search,\n        API_KEY,\n        default_url\n    } = requiredProps\n    Promise.all([\n        uploadImage(file, image_search, API_KEY, default_url),\n        getTags(file, requiredProps),\n        //incrementCounter(image_search)\n    ])\n    .then(response => {\n        if(response && response.length) {\n            updateimageSearchData(currResp => {\n                let UploadedResp = { ...currResp }\n                if(response[0]) {\n                    UploadedResp.madId = response[0]\n                }\n                if(response[1] && response[1].status && response[1].status.toLowerCase() === 'success') {\n                    UploadedResp.tagsResp = { ...response[1] }\n                }\n                return UploadedResp\n            })\n        }\n    })\n    .catch(err => console.log(err))\n}\n\nconst ConstructImageSrc = (file, updateRespObj) => {\n    if(file && file.length) {\n        if(typeof(file) === 'string') {\n            updateRespObj(currResp => {\n                let UpdatedResp = {...currResp}\n                UpdatedResp.imgSrc = file\n                return UpdatedResp\n            })                \n        }\n        else {\n            const reader = new FileReader();\n\n            reader.onload = function (e) {\n                updateRespObj(currResp => {\n                    let UpdatedResp = {...currResp}\n                    UpdatedResp.imgSrc = e.target && e.target.result ? e.target.result : ''\n                    return UpdatedResp\n                })\n            }\n\n            reader.readAsDataURL(file[0]);\n        }\n    }\n}\n\nconst RenderImageSearchInput = props => {\n    const {\n        updateimageSearchData\n    } = props\n    const currFile = useRef(null)\n    const [ CurrInputValue, updateInputValue ] = useState('')\n\n    return <UserInputWrapper>\n        <ConfigConsumer>\n            {context => {\n                const {\n                    vue_find,\n                    image_type,\n                    correlation_key,\n                    url\n                } = context\n                let API_KEY = context.API_KEY\n                let default_url = url\n                const image_search = vue_find && vue_find.children && vue_find.children.image_search ? vue_find.children.image_search : {}\n                if(image_search && image_search.API_KEY) {\n                    API_KEY = image_search.API_KEY\n                }\n                const requiredProps = {\n                    image_search,\n                    API_KEY,\n                    image_type,\n                    correlation_key,\n                    default_url\n                }\n                return  <FormWrapper onSubmit={e => {\n                    e.preventDefault()\n                    makeAPIRequests(CurrInputValue, updateimageSearchData, requiredProps)\n                    ConstructImageSrc(CurrInputValue, updateimageSearchData)\n                }}>\n                    <Input\n                        value={CurrInputValue}\n                        type='text'\n                        placeholder='Enter the Image URL here'\n                        onInput={e => updateInputValue(e.currentTarget.value || '')}\n                    />\n                    <Input type='submit' value='SEARCH' />\n                    <Input\n                        accept=\"image/x-png,image/jpeg\" \n                        hidden\n                        type='file'\n                        inputRef={UploadInputref}\n                        onChange={e => {\n                            currFile.current = e.currentTarget && e.currentTarget.files ? e.currentTarget.files : null\n                            if(currFile.current && currFile.current.length) {\n                                makeAPIRequests(currFile.current, updateimageSearchData, requiredProps)\n                                ConstructImageSrc(currFile.current, updateimageSearchData)\n                            }\n                            else {\n                                console.log('No files selected')\n                            }\n                        }}\n                    />\n                    <ImageUploadIcon onClick={e => {\n                        UploadInputref.current.click()\n                    }}/>\n                    <Select list={['men', 'women']} onChange={e => {\n                        updateimageSearchData(currState => {\n                            let updatedState = { ...currState }\n                            updatedState.gender = e.currentTarget && e.currentTarget.value ? e.currentTarget.value : 'men'\n                            return updatedState\n                        })\n                    }}/>\n                </FormWrapper>        \n            }}\n        </ConfigConsumer>\n    </UserInputWrapper>\n}\n\nconst constructTabs = labelsArr => {\n    let TabsData = []\n    if(labelsArr && labelsArr.length) {\n        TabsData = labelsArr.map((label, key) => {\n            const labelArr = label.split('>')\n            const labelArrLen = labelArr.length\n            return {\n                value: labelArr[labelArrLen - 1],\n                index: key.toString()\n            }\n        })\n    }\n    return TabsData\n}\n\nconst RenderSearchResults = props => {\n    const {\n        madId,\n        gender,\n        src,\n        internal_image_url,\n        debug\n    } = props\n\n    return <RecommendationSearchContainer madId={madId} gender={gender} debug={debug}>\n        <SearchResultWrapper>\n            {(internal_image_url || src) ? \n                <UploadedImgWrapper>\n                    <UploadedProductImage src={internal_image_url || src} alt='Uploaded Product Image' />\n                </UploadedImgWrapper>\n            : null}\n            <RecommendationSearchConsumer>\n                {context => {\n                    let RecommendedSearchMap = {}\n                    context && context.data && context.data.map((item, key) => {\n                        RecommendedSearchMap[key] = [ ...item ]\n                        return item\n                    })\n                    const tabsData = constructTabs(context.labels || [])\n                    return <ProductCarouselWithTabs\n                        tabsContainer={tabsData}\n                        activeIndex='0'\n                        recommendedData={RecommendedSearchMap}\n                        sliderPerGroup={4}\n                        hidePrice={true}\n                        hideMSDOntology={true}\n                        force_debug={debug}\n                    />\n                }}\n            </RecommendationSearchConsumer>\n        </SearchResultWrapper>\n    </RecommendationSearchContainer>\n}\n\nexport {\n    RenderImageSearchInput,\n    RenderSearchResults\n}","import React, { useState } from 'react'\nimport {\n    TitleWrapper,\n    VueLogoEl,\n    ImageSearchWrapper\n} from './styled'\nimport VueLogoImg from '../../static/svg/vue-find.svg'\nimport {\n    RenderImageSearchInput,\n    RenderSearchResults\n} from './renderProps'\n\nconst isDebug = () => {\n    let qp = window.location && window.location.search ? window.location.search.replace('?', '') : ''\n    qp = qp.split('&')\n    let debug = false\n    qp.map(param => {\n        if(param) {\n            let paramArr = param.split('=')\n            if(paramArr[0] && paramArr[1]) {\n                if(paramArr[0] === 'force_debug' && paramArr[1] === 'true') {\n                    debug = true\n                }\n            }\n        }\n        return param\n    })\n    return debug\n}\n\nconst ImageSearch = props => {\n    const [ imageSearchData, updateimageSearchData ] = useState({\n        madId: '',\n        gender: 'men',\n        imgSrc: '',\n        tagsResp: {}\n    })\n    const {\n        gender,\n        madId,\n        imgSrc\n    } = imageSearchData\n    const debug = isDebug()\n\n    return <>\n        <TitleWrapper>\n            <VueLogoEl src={VueLogoImg} alt='Vue Find logo' title='Vue Find' />\n        </TitleWrapper>\n        <ImageSearchWrapper>\n            <RenderImageSearchInput updateimageSearchData={updateimageSearchData} />\n        </ImageSearchWrapper>\n        <RenderSearchResults\n            gender={gender}\n            madId={madId}\n            src={imgSrc}\n            debug={debug}\n        />\n    </>\n}\n\nexport { ImageSearch }","export * from './ImageSearch'\nexport { ImageSearch as default } from './ImageSearch'\nexport * from './styled'"],"sourceRoot":""}