{"version":3,"sources":["page/UserProfile/styled.jsx","page/UserProfile/renderProps.jsx","page/UserProfile/UserProfile.jsx","page/UserProfile/index.js"],"names":["styled","div","UserProfileWrapper","InputEl","UserInputCont","form","InputSectionCont","UserInfoWrapper","ProductRecommendationWrapper","RecommendationBtn","PdtRecommendationTabsWrapper","PdtRecommendationTabs","props","isActive","css","RecosKeyFrames","keyframes","RecosLoader","LoadingPersonalisedResults","h4","DropDownContainer","UserDataAffinityContainer","WordCloudContainer","SparkLineContainer","UserInputSection","submitEvent","value","trim","length","localStorage","setItem","window","location","reload","placeholder","InputCont","inputRef","createRef","onSubmit","e","preventDefault","current","type","ProductRecommendationSection","ontology","updateOntology","updateUserAffinityData","userAffinityData","currentUserAffinityData","updateCurrentUserAffinityData","useState","activeTab","updateTab","widgetList","updateWidgetList","currWidget","updateWidget","rendered","useRef","useEffect","shift","onChangeFacet","console","log","context","vue_user","discover","API_KEY","url","user_id","getItem","discover_recommendation","recommendation","widget_arr","mad_UUID","getCookie","userAffinityPage","userAffinityUrl","push","recommendedWidgetList","loading","ontology_list","_userAffinityData","absolute_affinity","each_facet","new_obj","key","text","constructPdtTabs","list","hideMSDOntology","sliderPerGroup","Dropdown","fluid","search","selection","options","onChange","defaultValue","words","data","height","width","color","recentlyVisited","UserDataAttrs","browsingHistory","aiStylePicks","pdtTabs","onClick","UserProfile"],"mappings":"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","file":"static/js/10.af6a0a4d.chunk.js","sourcesContent":["import styled, { css, keyframes } from 'styled-components'\nimport { InputEl, RecommendationBtn } from '../../component'\n\nconst TitleEl = styled.div`\n    height: 3.5em;\n    line-height: 3.5em;\n    border-bottom: 1px solid #E2E2E2;\n    text-transform: uppercase;\n    text-align: center;\n    color: #064559;\n    font-size: 1.25em;\n    font-family: \"SourceSansPro-SemiBold\";\n    position: fixed;\n    top: 45px;\n    min-width: 1240px;\n    width: 100%;\n    z-index: 1;\n    background-color: #fff;\n`\n\nconst UserProfileWrapper = styled.div`\n    background-color: #F3F4FB;\n    margin-top: 3rem;\n    ${InputEl} {\n        padding: .75em .75em;\n        margin: 1px;\n        width: calc(100% - (1px * 2));\n        height: calc(100% - (1px * 2));\n        font-size: 14px;\n        color: #064559;\n        border: 0;\n        border-radius: .15em;\n        outline: none;\n        &[type='text'] {\n            width: 43.75%;\n            border: 1px solid #b9b9b9;\n        }\n        &[type='submit'] {\n            width: 12.5%;\n            background-color: #2185d0;\n            color: #fff;\n            margin-left: 8px;\n            cursor: pointer;\n        }\n    }\n`\n\nconst UserInputCont = styled.form`\n    text-align: center;\n    padding: 1em 0;\n    width: 62.5%;\n    margin: auto;\n`\n\nconst InputSectionCont = styled.div`\n`\n\nconst UserInfoWrapper = styled.div`\n    font-family: \"SourceSansPro-Regular\";\n    font-size: 14px;\n    color: #064559;\n    text-align: center;\n    margin-bottom: 2em;\n`\n\nconst ProductRecommendationWrapper = styled.div`\n    width: 87.5%;\n    margin: auto;\n    background-color: #fff;\n    ${RecommendationBtn} {\n        display: block;\n    }\n`\n\nconst PdtRecommendationTabsWrapper = styled.div`\n    display: flex;\n    margin-bottom: 5px;\n    padding-left: 1rem;\n    padding-top:0.5rem;\n`\n\nconst PdtRecommendationTabs = styled.div`\n    color: #064559;\n    font-size: 16px;\n    font-family: \"SourceSansPro-Regular\";\n    padding: .5em;\n    line-height: 120%;\n    cursor: pointer;\n    ${props => props.isActive ? css`\n        border-bottom: 1px solid #064559;     \n    ` : null}\n`\nconst RecosKeyFrames = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RecosLoader = styled.div`\n    border: 10px solid #f3f3f3; /* Light grey */\n    border-top: 10px solid #3498db; /* Blue */\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    animation: ${RecosKeyFrames} 2s linear infinite;\n    margin: auto\n`\n\nconst LoadingPersonalisedResults = styled.h4`\n    text-align: center;\n    color: #064559;\n`\n\nconst WordCloudWrapper = styled.div`\n    width: 100%%;\n    float: left;\n    padding-left: 1rem;\n`\n\nconst DropDownContainer = styled.div`\n  width: 300px;\n  margin: auto;\n  margin-top: 2rem;\n`\nconst OverallContainer = styled.div`\n  width: 700px;\n`\n\nconst UserDataAffinityContainer = styled.div`\n    width:100%;\n    margin-left:23rem;\n`\n\nconst WordCloudContainer = styled.div`\n    display: inline-block;\n`\nconst SparkLineContainer = styled.div`\n    display: inline-block;\n    padding-left:5%\n`\n\nconst AffinityButton = styled.div`\n    margin-left:43%\n`\n\nexport {\n    UserProfileWrapper,\n    TitleEl,\n    UserInputCont,\n    InputSectionCont,\n    ProductRecommendationWrapper,\n    PdtRecommendationTabs,\n    PdtRecommendationTabsWrapper,\n    UserInfoWrapper,\n    LoadingPersonalisedResults,\n    RecosLoader,\n    WordCloudWrapper,\n    WordCloudContainer,\n    DropDownContainer,\n    UserDataAffinityContainer,\n    SparkLineContainer,\n    OverallContainer,\n    AffinityButton\n}","import React, { useState, useRef, createRef, useEffect } from 'react'\nimport { Input, ProductCarousel } from '../../component'\nimport ReactWordcloud from 'react-wordcloud';\nimport {\n    UserInputCont,\n    InputSectionCont,\n    ProductRecommendationWrapper,\n    PdtRecommendationTabs,\n    PdtRecommendationTabsWrapper,\n    LoadingPersonalisedResults,\n    RecosLoader,\n    WordCloudWrapper,\n    WordCloudContainer,\n    DropDownContainer,\n    UserDataAffinityContainer,\n    SparkLineContainer,\n    AffinityButton\n} from './styled'\nimport { UserDataAttrs } from '../../configs'\nimport { RecommendedPdtsContainer, RecommendedPdtsConsumer, ConfigConsumer } from '../../container'\nimport { setCookie, getCookie, generate_uuid } from '../../common'\nimport { Dropdown } from 'semantic-ui-react'\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\nimport { Button, Modal } from 'semantic-ui-react'\n\nconst UserInputSection = props => {\n    return <InputSectionCont>\n        {/* <InputCont\n            submitEvent={(value) => {\n                if (value && value.trim().length) {\n                    setCookie('mad_UUID', value, 365)\n                }\n            }}\n            placeholder='Enter a MAD mad_UUID to begin a new session'\n        /> */}\n        <InputCont\n            submitEvent={(value) => {\n                if (value && value.trim().length) {\n                    localStorage.setItem('userId', value)\n                    //let uuid = generate_uuid()\n                    //setCookie('mad_UUID', uuid, 365)\n                    window.location.reload();\n                }\n            }}\n            placeholder='Enter User ID to begin a new session'\n        />\n    </InputSectionCont>\n}\n\nconst InputCont = props => {\n    const {\n        placeholder,\n        submitEvent\n    } = props\n    const inputRef = createRef()\n\n    return <UserInputCont onSubmit={e => {\n        e.preventDefault()\n        const value = inputRef.current.value || ''\n        submitEvent && submitEvent(value)\n    }}>\n        <Input\n            type='text'\n            placeholder={placeholder}\n            inputRef={inputRef}\n        />\n        <Input\n            type='submit'\n            value='Begin'\n        />\n    </UserInputCont>\n}\n\nconst ProductRecommendationSection = props => {\n    const {\n        ontology,\n        updateOntology,\n        updateUserAffinityData,\n        userAffinityData,\n        currentUserAffinityData,\n        updateCurrentUserAffinityData\n    } = props\n    const [activeTab, updateTab] = useState('')\n    const [widgetList, updateWidgetList] = useState([])\n    const [currWidget, updateWidget] = useState({})\n    const [isModal, updateModal] = useState(false)\n    const rendered = useRef(false)\n    let recos_section = false\n    let current_tab = ''\n    useEffect(() => {\n        if (widgetList && widgetList.length) {\n            updateWidget(widgetList[0])\n            widgetList.shift()\n            updateWidgetList([...widgetList])\n        }\n    }, [widgetList])\n    const onChangeFacet = (e, { value }) => {\n        console.log(value)\n        updateOntology(value)\n        console.log(userAffinityData[value])\n        updateCurrentUserAffinityData(userAffinityData[value])\n    }\n    function show() {\n        updateModal(true)\n    }\n    function close() {\n        updateModal(false)\n    }\n    return <ConfigConsumer>\n        {context => {\n            const {\n                vue_user,\n                discover\n            } = context\n            let API_KEY = context.API_KEY\n            let url = context.url\n            let user_id = localStorage.getItem('userId')\n            if (!user_id) {\n                user_id = context.user_id\n            }\n            if (vue_user.API_KEY) {\n                API_KEY = vue_user.API_KEY\n            }\n            const discover_recommendation = discover && discover.recommendation ? discover.recommendation : (url + \"/widgets\")\n            \n            let widget_arr = []\n            const mad_UUID = getCookie('mad_UUID')\n            const recommendation = vue_user && vue_user.recommendation ? vue_user.recommendation : discover_recommendation\n            if (!rendered.current && API_KEY && user_id && mad_UUID) {\n                rendered.current = true\n\n                if(context.vue_user && context.vue_user.userAffinityPage && context.vue_user.userAffinityUrl.length > 0){\n                    widget_arr.push({\n                        'widgetList': ['user_affinity'],\n                        'postBody': `api_key=${API_KEY}&mad_uuid=${mad_UUID}&user_id=${user_id}`,\n                        'recommendationUrl': context.vue_user.userAffinityUrl\n                    })\n                }\n                widget_arr.push({\n                    'widgetList': ['7', '11', '1', '3'],\n                    'postBody': `api_key=${API_KEY}&user_id=${user_id}&cp_ensemble=true&details=true&duplicates=true&fields=[\"id\",\"product_id\",\"category\",\"ontology\",\"link\",\"image_link\",\"internal_image_url\",\"small_image_link\"]&mad_uuid=${mad_UUID}&num_results=[50]&require_source=true&widget_list=[7,1,11,3]`,\n                    'recommendationUrl': recommendation\n                })\n                updateWidgetList(widget_arr)\n            }\n\n            return <div>\n                <RecommendedPdtsContainer recommendedWidgetList={currWidget}>\n                    <RecommendedPdtsConsumer>\n                        {context => {\n                            const {loading} = context\n                            let ontology_list = []\n                            let _userAffinityData = {}\n                            if (context['user_affinity']) {\n                                let absolute_affinity = context['user_affinity']['absolute_affinities']\n                                for (let each_facet in absolute_affinity) {\n                                    let new_obj = { key: each_facet, value: each_facet, text: each_facet }\n                                    ontology_list.push(new_obj)\n\n                                    _userAffinityData[each_facet] = { 'word_cloud': absolute_affinity[each_facet], 'relative_affinity': context['user_affinity']['relative_affinities'][each_facet] }\n                                }\n                                if (ontology.length == 0 && ontology_list.length > 0) {\n                                    updateOntology(ontology_list[0].value)\n                                    updateUserAffinityData(_userAffinityData)\n                                    updateCurrentUserAffinityData(_userAffinityData[ontology_list[0].value])\n                                }\n                            }\n\n\n\n                            if (context['7']) {\n                                if (!activeTab) {\n                                    if (context['7']) {\n                                        updateTab('7')\n                                    }\n                                    else if (context['1']) {\n                                        updateTab('1')\n\n                                    }\n                                }\n\n\n                                return <>\n                                    {/* <AffinityButton><Button color='blue' onClick={show}>Show Affinity</Button></AffinityButton>\n                                    <Modal size='large' open={isModal} onClose={close}>\n                                        <Modal.Header>User Affinity Data</Modal.Header>\n                                        <Modal.Content>\n                                            \n                                        </Modal.Content>\n                                    </Modal> */}\n                                    <ProductRecommendationWrapper>\n                                        <PdtRecommendationTabsWrapper>\n                                            {constructPdtTabs(context, activeTab, updateTab)}\n                                        </PdtRecommendationTabsWrapper>\n                                        <ProductCarousel\n                                            list={context[activeTab] || []}\n                                            hideMSDOntology={true}\n                                            sliderPerGroup={5}\n                                        /></ProductRecommendationWrapper>\n                                        <DropDownContainer>\n                                        <LoadingPersonalisedResults>User Affinitiy</LoadingPersonalisedResults>\n                                                <Dropdown\n                                                    placeholder='Select Facet'\n                                                    fluid\n                                                    search\n                                                    selection\n                                                    options={ontology_list}\n                                                    onChange={onChangeFacet}\n                                                    defaultValue={ontology}\n                                                />\n                                            </DropDownContainer>\n                                            {currentUserAffinityData && currentUserAffinityData['word_cloud'] ?\n                                                <UserDataAffinityContainer>\n                                                    <WordCloudContainer><ReactWordcloud words={currentUserAffinityData['word_cloud']} /></WordCloudContainer>\n                                                    {currentUserAffinityData['relative_affinity'] ?\n                                                        <>\n                                                            <SparkLineContainer>\n                                                                <Sparklines data={currentUserAffinityData['relative_affinity'][0]} height={80} width={180}>\n                                                                    <SparklinesLine color='red' />\n                                                                </Sparklines>\n                                                                {currentUserAffinityData['relative_affinity'][0].length > 1 ? <p> &nbsp; Colour & Pattern</p> : null}\n                                                                <Sparklines data={currentUserAffinityData['relative_affinity'][1]} height={80} width={180}>\n                                                                    <SparklinesLine color='blue' />\n                                                                </Sparklines>\n                                                                {currentUserAffinityData['relative_affinity'][1].length > 1 ? <p> &nbsp; Colour & Shape</p> : null}\n                                                                <Sparklines data={currentUserAffinityData['relative_affinity'][2]} height={80} width={180}>\n                                                                    <SparklinesLine color='green' />\n                                                                </Sparklines>\n                                                                {currentUserAffinityData['relative_affinity'][2].length > 1 ? <p> &nbsp; Pattern</p> : null}\n                                                            </SparkLineContainer>\n                                                            <SparkLineContainer>\n                                                                <Sparklines data={currentUserAffinityData['relative_affinity'][3]} height={80} width={180}>\n                                                                    <SparklinesLine color='orange' />\n                                                                </Sparklines>\n                                                                {currentUserAffinityData['relative_affinity'][3].length > 1 ? <p> &nbsp; Colour</p> : null}\n                                                                <Sparklines data={currentUserAffinityData['relative_affinity'][4]} height={80} width={180}>\n                                                                    <SparklinesLine color='purple' />\n                                                                </Sparklines>\n                                                                {currentUserAffinityData['relative_affinity'][4].length > 1 ? <p> &nbsp; Pattern & Shape </p> : null}\n                                                                <Sparklines data={currentUserAffinityData['relative_affinity'][5]} height={80} width={180}>\n                                                                    <SparklinesLine color='gray' />\n                                                                </Sparklines>\n                                                                {currentUserAffinityData['relative_affinity'][5].length > 1 ? <p> &nbsp; Shape</p> : null}\n                                                            </SparkLineContainer> </> : null}\n                                                </UserDataAffinityContainer> : null}\n                                </>\n                            } else {\n                                return <>\n                                    {loading ? <RecosLoader></RecosLoader> : null}\n                                </>\n                            }\n                        }}\n                    </RecommendedPdtsConsumer>\n                </RecommendedPdtsContainer>\n            </div>\n        }}\n    </ConfigConsumer >\n}\n\nconst constructPdtTabs = (context, activeTab, updateTab) => {\n    const {\n        recentlyVisited,\n        recommendation,\n        browsingHistory,\n        aiStylePicks\n    } = UserDataAttrs\n    const pdtTabs = []\n\n    if (context['7']) {\n        pdtTabs.push(\n            <PdtRecommendationTabs isActive={activeTab === '7'} onClick={e => updateTab('7')} key='tab_visited'>\n                {recentlyVisited}\n            </PdtRecommendationTabs>\n        )\n    }\n    if (context['1']) {\n        pdtTabs.push(\n            <PdtRecommendationTabs isActive={activeTab === '1'} onClick={e => updateTab('1')} key='tab_history'>\n                {browsingHistory}\n            </PdtRecommendationTabs>\n        )\n    }\n    if (context['11']) {\n        pdtTabs.push(\n            <PdtRecommendationTabs isActive={activeTab === '11'} onClick={e => updateTab('11')} key='tab_recommended'>\n                {recommendation}\n            </PdtRecommendationTabs>\n        )\n    }\n    if (context['3']) {\n        pdtTabs.push(\n            <PdtRecommendationTabs isActive={activeTab === '3'} onClick={e => updateTab('3')} key='tab_trending'>\n                Trending\n            </PdtRecommendationTabs>\n        )\n    }\n    if (context['20']) {\n        pdtTabs.push(\n            <PdtRecommendationTabs isActive={activeTab === '20'} onClick={e => updateTab('20')} key='tab_aiStylePicks'>\n                {aiStylePicks}\n            </PdtRecommendationTabs>\n        )\n    }\n    return pdtTabs\n}\n\nconst ConstructOntologyDropdown = props => {\n    const {\n        ontology,\n        updateOntology\n    } = props\n    return <RecommendedPdtsConsumer>\n        {context => {\n            const {\n                loading\n            } = context\n            let ontology_list = []\n            if (context['user_affinity'] && ontology.length > 0) {\n                let absolute_affinity = context['user_affinity']['absolute_affinities']\n                for (let each_facet in absolute_affinity) {\n                    let new_obj = { key: each_facet, value: each_facet, flag: each_facet, text: each_facet }\n                    ontology_list.push(new_obj)\n                }\n                if (ontology_list && ontology_list.length > 0) {\n                    //updateOntology(ontology_list[0])\n                }\n            }\n            return <>\n                <Dropdown\n                    placeholder='Select Facet'\n                    fluid\n                    search\n                    selection\n                    options={ontology_list}\n                />\n            </>\n        }}\n    </RecommendedPdtsConsumer>\n}\n\n\nexport {\n    UserInputSection,\n    ProductRecommendationSection,\n    ConstructOntologyDropdown\n}","import React,{useState} from 'react'\nimport {\n    UserInputSection,\n    ProductRecommendationSection,\n    ConstructOntologyDropdown\n} from './renderProps'\nimport {\n    TitleEl,\n    UserProfileWrapper,\n    UserInfoWrapper\n} from './styled'\nimport {\n    ConfigConsumer\n} from '../../container'\nimport { getCookie } from '../../common'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst UserProfile = props => {\n    const [ ontology, updateOntology] = useState('')\n    const [ userAffinityData, updateUserAffinityData] = useState({})\n    const [ currentUserAffinityData, updateCurrentUserAffinityData] = useState({})\n    return <>\n        {/* <TitleEl>USER PROFILE</TitleEl> */}\n        <UserProfileWrapper>\n            <UserInputSection />\n            <ConfigConsumer>\n                {context => {\n                    const mad_UUID = getCookie('mad_UUID')\n                    let user_id = localStorage.getItem('userId')\n                    if(!user_id) {\n                        user_id = context.user_id\n                    }                                    \n                    return <UserInfoWrapper>\n                        MAD UUID : {mad_UUID} and User ID : {user_id}\n                    </UserInfoWrapper>\n                }}\n            </ConfigConsumer>\n        </UserProfileWrapper>\n        <ProductRecommendationSection ontology={ontology} updateOntology={updateOntology} \n        updateUserAffinityData={updateUserAffinityData} userAffinityData={userAffinityData} \n        currentUserAffinityData={currentUserAffinityData} updateCurrentUserAffinityData={updateCurrentUserAffinityData} />\n    </>\n}\n\nexport { UserProfile }","export * from './UserProfile'\nexport { UserProfile as default } from './UserProfile'"],"sourceRoot":""}